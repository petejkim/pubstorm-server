#!/bin/bash

PUBLIC_BUCKET=${PUBLIC_BUCKET:="rise-server-staging"}
UPLOAD_S3=${UPLOAD_S3:="false"}
BUILD_DIR=/opt/bin

upload_s3() {
  if [[ "$UPLOAD_S3" == "true" ]]; then
    s3cmd --access_key=$ACCESS_KEY --secret_key=$SECRET_KEY --acl-public \
      put $1 s3://$PUBLIC_BUCKET/$2
  fi
}

get_version() {
  app=$1
  version=$(cat $app/VERSION) # get version from version file
  sha=$(git rev-list --max-count=1 --abbrev-commit HEAD)

  echo "${version}-${sha}" # 1.0.1-asdf
}

hash_files() {
  f="$1"
  dest="$2"
  dir="$(dirname "$f")"
  base="$(basename "$f")"
  for hashAlgo in md5 sha256; do
    if command -v "${hashAlgo}sum" &> /dev/null; then
      (
      cd $dir
      "${hashAlgo}sum" "$base" > "$dest.$hashAlgo"
      )
    fi
  done
}

build() {
  cd /opt/src/github.com/nitrous-io/rise-server
  app=$1
  version=$(get_version $app)
  LDFLAGS="-X main.version $version"
  echo "Building $app $version"
  go install github.com/nitrous-io/rise-server/$app
  echo $version > $BUILD_DIR/$app-VERSION
}

# bundle binary (from dedicated/script/release)
bundle_binary() {
  BINARY=$1
  shift
  VERSION=$(cat $BUILD_DIR/${BINARY}-VERSION)
  pkg=${BINARY}-${VERSION}.tar.gz
  latestpkg=${BINARY}-latest.tar.gz

  echo "BINARY_VERSION=${VERSION}" > jenkins.properties

  (
  cd $BUILD_DIR
  tar zvcf $pkg $BINARY $@

  hash_files $pkg $BINARY

  upload_s3 $pkg $pkg
  upload_s3 ${BINARY}.md5 ${BINARY}-${VERSION}.md5
  upload_s3 ${BINARY}.sha256 ${BINARY}-${VERSION}.sha256

  upload_s3 $pkg $latestpkg
  upload_s3 ${BINARY}.md5 ${BINARY}-latest.md5
  upload_s3 ${BINARY}.sha256 ${BINARY}-latest.sha256
  )
}


# Remove old builds
rm -rf /opt/bin/*

# TODO: Add tests

# Create binaries
echo "Creating binaries"
build apiserver
build edged

# TODO: Perform release to s3
bundle_binary apiserver
bundle_binary edged
